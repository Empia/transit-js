#!/bin/bash

set -e

echo "Cleaning..."
rm -rf ./target

echo "Calculating version..."
prefix=`cat VERSION_PREFIX`
suffix=`build/revision`
version=$prefix.$suffix
echo $version

target_name=transit-js-${version}

echo "Releasing..."
mvn versions:set -DnewVersion=${version}
mvn clean deploy
mvn versions:revert

echo "Tagging..."
git tag -a v${version} -m "Release ${version}"
git push origin v${version}

echo "Building browser .js to cdn"
bin/build_release_browser
bin/build_release_browser_amd
bin/build_dev_browser
bin/build_dev_browser_amd

echo "Pushing browser .js to cdn in s3"
aws s3 --profile transit-upload sync ./target s3://cdn.cognitect.com/transit --exclude "*" --include "transit-${version}*.js" --content-type text/plain

echo "Updating README.md versions"
sed -i '' "s/[[:digit:]]\{1,2\}\.[[:digit:]]\{1,2\}\.[[:digit:]]\{2,4\}/${version}/g" README.md
git commit -v -m "Update README.md with ${version}" README.md
git push 

echo "Building new api docs"
bin/docs

echo -e "Updating bower version\n"
rm -rf bower-transit-js
git clone --quiet git@github.com:cognitect/bower-transit-js.git bower-transit-js > /dev/null
cd bower-transit-js
cp ../target/transit-${version}.js ./transit.js
cp ../target/transit-${version}-min.js ./transit-min.js
cp ../target/transit-${version}-amd.js ./transit-amd.js
cp ../target/transit-${version}-amd-min.js ./transit-amd-min.js
git add -f transit.js
git add -f transit-min.js
git add -f transit-amd.js
git add -f transit-amd-min.js
sed -e "s/\"version\": \"[[:digit:]]\{1,2\}\.[[:digit:]]\{1,2\}\.[[:digit:]]\{2,4\}/\"version\": \"${version}/g" package.json > package.json.tmp
rm package.json
mv package.json.tmp package.json
git add -f package.json
sed -e "s/\"version\": \"[[:digit:]]\{1,2\}\.[[:digit:]]\{1,2\}\.[[:digit:]]\{2,4\}/\"version\": \"${version}/g" bower.json > bower.json.tmp
rm bower.json
mv bower.json.tmp bower.json
git add -f bower.json
git commit -m "${version}"
git push -fq > /dev/null
git tag ${version}
git push --tags > /dev/null
cd ..
rm -rf bower-transit-js

echo "Updating npm version\n"
bin/build_dev_node
rm -rf npm-transit-js
git clone --quiet git@github.com:cognitect/npm-transit-js.git npm-transit-js > /dev/null
cd npm-transit-js
cp ../target/transit.js ./transit.js
git add -f transit.js
sed -e "s/\"version\": \"[[:digit:]]\{1,2\}\.[[:digit:]]\{1,2\}\.[[:digit:]]\{2,4\}/\"version\": \"${version}/g" package.json > package.json.tmp
rm package.json
mv package.json.tmp package.json
git add -f package.json
git commit -m "${version}"
git push -fq > /dev/null
git tag ${version}
git push --tags > /dev/null
cd ..
rm -rf npm-transit-js


echo "Releasing npm package\n"
# Need help on this command!
npm publish

echo "Release done!"
